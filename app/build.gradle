apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    /*
    Test only modules require other artifacts like the classes.jar to be published, so the test can
    reference the tested java sources and compile them correctly. In order to get all these
    artifacts published from the tested module publishNonDefault needs to be set to true.
     */
    publishNonDefault true

    defaultConfig {
        applicationId "com.mycompany.servicetime"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 3
        versionName "1.2"

        //testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.mycompany.servicetime.CustomTestRunner"
        //testInstrumentationRunner "com.mycompany.servicetime.MockTestRunner"
        // prohibit uploading analytics data to google
        testInstrumentationRunnerArguments disableAnalytics: 'true'
        // CI emulator test
        //com.android.ddmlib.DdmPreferences.setTimeOut(60000)
    }
    buildTypes {
        debug {
            //minifyEnabed true
            useProguard false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    /* This for anyone following along with the repo.
     * This code loads up a value from the gradle.properties file.
     */
    buildTypes.each {
        it.buildConfigField 'String', 'UNIQUE_FIREBASE_ROOT_URL', UniqueFirebaseRootUrl
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE-FIREBASE.txt'
        exclude 'META-INF/NOTICE'
    }
    dexOptions {
        maxProcessCount = 4
        dexInProcess false
    }
    lintOptions {
        enable ''
        checkReleaseBuilds false
    }
//    // CI emulator test
//    adbOptions {
//        timeOutInMs 600000
//    }
    configurations {
        // Resolved 'com.android.support:support-annotations' versions for app (23.2.1) and test
        // app (23.1.0) differ.
        // Add this statement if 'com.android.support:support-annotations:x.x.x' dependencies was already defined in compile scheme.
        androidTestCompile.exclude group: 'com.android.support', module: 'support-annotations'
        androidTestCompile.exclude group: 'com.android.support', module: 'support-v4'
        androidTestCompile.exclude group: 'com.android.support', module: 'appcompat-v7'
        androidTestCompile.exclude group: 'com.android.support', module: 'recyclerview-v7'
        androidTestCompile.exclude group: 'com.android.support', module: 'design'
    }
}

//configurations.all {
//    resolutionStrategy {
//        // fail eagerly on version conflict (includes transitive dependencies)
//        // e.g. multiple different versions of the same dependency (group and name are equal)
//        //failOnVersionConflict()
//
//        // force certain versions of dependencies (including transitive)
//        force 'com.android.support:support-annotations:23.2.1'
//    }
//}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    compile 'com.google.android.gms:play-services-ads:8.4.0'
    compile 'com.firebase:firebase-client-android:2.5.2'
    compile 'com.squareup.retrofit2:retrofit:2.0.0'
    compile 'com.squareup.retrofit2:converter-jackson:2.0.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.3'
    compile "com.android.support.test.espresso:espresso-idling-resource:$rootProject.espressoVersion"
    compile "com.google.guava:guava-base:$rootProject.guavaVersion"

    testCompile 'junit:junit:4.12'
    //testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.powermock:powermock-module-junit4:1.6.4'
    testCompile 'org.powermock:powermock-api-mockito:1.6.4'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'com.squareup.okhttp3:mockwebserver:3.2.0'
    testCompile "org.robolectric:robolectric:3.0"
//    testCompile('com.firebase:firebase-client-jvm:2.5.2') {
//        exclude group: "com.fasterxml.jackson.core"
//        exclude module: "firebase-client-android"
//    }

    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-contrib:$rootProject.espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"
}

// Grant animation permissions to avoid test failure because of ui sync.
task grantAnimationPermissions(type: Exec, dependsOn: 'installMock') {
    group = 'test'
    description = 'Grant permissions for testing.'

    def absolutePath = file('..') // Get project absolute path
    commandLine "$absolutePath/set_animation_permissions.sh com.mycompany.servicetime".split(" ")
}

// Source: http://stackoverflow.com/q/29908110/112705
afterEvaluate {
    // When launching individual tests from Android Studio, it seems that only the assemble tasks
    // get called directly, not the install* versions
    tasks.each { task ->
        if (task.name.startsWith('assembleAndroidTest')) {
            task.dependsOn grantAnimationPermissions
        }
    }
}